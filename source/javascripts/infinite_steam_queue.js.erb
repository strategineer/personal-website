let games = new Map();
<% data.steamgames.applist.apps.each do |g| %>
<%= "games.set(\"#{g.appid}\"" + "," + "\`#{g.name.gsub("`", "")}\`);" %>
<% end %>
let gameKeys =[ ...games.keys() ];

async function onNavigateToSteam() {
  await new Promise(resolve => setTimeout(resolve, 250));
  await setRandomDiscovery();
}

function getGameUrlFromKey(key) {
  return `https://store.steampowered.com/app/${key}/`;
}


ExplorerImp = {
  map: games,
  keys: gameKeys,
  currentKey: undefined,
  onSetDiscovery: async function (key, discovery) {
    let gameNameElement = document.getElementById("explorer-game-name");
    if(typeof gameNameElement !== 'undefined' && gameNameElement !== null) {
      gameNameElement.innerText = discovery;
    }
    let gameUrlElement = document.getElementById("explorer-game-url");
    if(typeof gameUrlElement !== 'undefined' && gameUrlElement !== null) {
      const gameUrl = getGameUrlFromKey(key);
      gameUrlElement.href = gameUrl;
      gameUrlElement.innerText = gameUrl;
    }
  },
  generateShareData: function () {
    const gameName = ExplorerImp.map.get(ExplorerImp.currentKey);
    const gameUrl = getGameUrlFromKey(key);
    return {
      title: `Infinite Steam Queue - ${gameName}`,
      text: window.location.href,
      url: gameUrl
    }
  },
  onClickWord: async function (word) {}
}
