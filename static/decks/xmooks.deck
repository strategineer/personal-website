{deck}
version:1
card:0
size:[512,342]
script:"0"
name:"xmooks.deck"
author:"strategineer"

{script:0}
on stat_to_mod x do
 floor (x/3)-3 #GLOG classic.
end
{end}

{card:Home}
image:"%%IMG2AgABVgD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8AUQGWAP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8ArgFlAP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wDgAQEA/wD/AQEAAQEBAP8A/gEBAAEBAQADAQEA/wD5AQEAAwEBAP8A/AEBAAMBAQD/APsBAQAFAQEA/wD6AQcAAQEBAP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AL8="
script:"Home.0"
{widgets}
label1:{"type":"field","size":[39,17],"pos":[46,38],"locked":1,"border":0,"value":"Level:"}
label3:{"type":"field","size":[29,18],"pos":[125,125],"locked":1,"border":0,"value":{"text":["","Max:"],"font":["","body"],"arg":["",""]}}
label2:{"type":"field","size":[22,18],"pos":[5,125],"locked":1,"border":0,"value":"HP:"}
CharacterName:{"type":"field","size":[166,18],"pos":[5,19],"font":"menu","style":"plain","align":"center","value":"Jorge"}
Statistic1:{"type":"contraption","size":[165,20],"pos":[6,210],"script":"Home.1","def":"Statistic","widgets":{"name":{},"score":{},"modifier":{},"roll":{}}}
Statistic2:{"type":"contraption","size":[165,20],"pos":[6,232],"script":"Home.2","def":"Statistic","widgets":{"name":{"value":"Dex"},"score":{},"modifier":{},"roll":{}}}
Statistic3:{"type":"contraption","size":[165,20],"pos":[6,254],"script":"Home.3","def":"Statistic","widgets":{"name":{"value":"Con"},"score":{},"modifier":{},"roll":{}}}
Statistic4:{"type":"contraption","size":[165,20],"pos":[6,276],"script":"Home.4","def":"Statistic","widgets":{"name":{"value":"Int"},"score":{},"modifier":{},"roll":{}}}
Statistic5:{"type":"contraption","size":[165,20],"pos":[6,298],"script":"Home.5","def":"Statistic","widgets":{"name":{"value":"Wis"},"score":{},"modifier":{},"roll":{}}}
Statistic6:{"type":"contraption","size":[165,20],"pos":[6,320],"script":"Home.6","def":"Statistic","widgets":{"name":{"value":"Cha"},"score":{},"modifier":{},"roll":{}}}
level:{"type":"slider","size":[90,17],"pos":[81,39],"script":"Home.7","font":"menu","interval":[0,20],"value":1,"style":"compact"}
HP:{"type":"slider","size":[99,18],"pos":[23,125],"interval":[0,6],"value":6,"format":"%f/6","style":"bar"}
MaxHP:{"type":"field","size":[17,18],"pos":[155,125],"locked":1,"script":"Home.8","style":"code","align":"center","value":"6"}
template1:{"type":"field","size":[175,61],"pos":[332,19],"script":"Home.9","scrollbar":1,"value":"Wizard A: Spellcasting\n+1 MD, +1 Spell Slot, +1 Spell(1-6)\n\nI can cast spells yay!"}
template2:{"type":"field","size":[175,54],"pos":[332,83],"show":"invert","scrollbar":1,"value":"?:"}
template3:{"type":"field","size":[175,59],"pos":[332,140],"show":"invert","scrollbar":1,"value":"?:"}
template4:{"type":"field","size":[175,56],"pos":[332,203],"show":"invert","scrollbar":1,"value":"?:"}
SpellsButton:{"type":"button","size":[39,20],"pos":[468,317],"script":"Home.10","text":"Spells"}
inventory:{"type":"grid","size":[155,136],"pos":[174,38],"script":"Home.11","font":"mono","scrollbar":1,"headers":0,"lines":1,"bycell":1,"widths":[99],"format":"si","value":{"INVENTORY":["Blanket","3x Rations","","","","","","","","","","","","","","","","","",""],"number":[1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},"row":2,"col":1}
DeltaButton:{"type":"button","size":[42,20],"pos":[346,317],"script":"Home.12","text":"Deltas"}
label8:{"type":"field","size":[154,19],"pos":[175,19],"locked":1,"font":"menu","show":"invert","align":"center","value":"INVENTORY"}
NotesButton:{"type":"button","size":[40,20],"pos":[409,317],"script":"Home.13","text":"Notes"}
Portrait:{"type":"canvas","size":[38,84],"pos":[5,38],"image":"%%IMG2ACYAVAD/AEEBAQAlAQEACQEBABsBAQAJAQEAGwEBAAkBAQAWAQEABAEBAAkBAQAWAQEABAEBAAgBAQAXAQEABAEBAAgBAQAYAQEAAwEBAAcBAQAaAQEAAgEBAAcBAQAbAQEAAQEBAAYBAQAcAQEABwEBAB4BBAACAQEAHwEBAAIBBAAfAQIAAQEBAAEBAQAgAQIAAgEDAB8BBwAfAQQAAgEBAB8BAgABAQEAAgECAB4BAQAEAQIAHwEBAAQBAgAfAQEABAECAB8BAQAFAQEAIAEBAAQBAQAgAQEABAEBACABAQADAQIAIAEBAAMBAQAiAQEAAQEBACQBAgAlAQEAJQEBACQBBAAhAQMAJQEBACUBAQAlAQEAJQEBACUBAgAkAQIAIwEBAAIBAQAiAQEAAgEBACEBAQADAQEAIAECAAMBAQAmAQEAJQEBAP8A/wD/AP8A0w==","scale":1}
template5:{"type":"field","size":[175,51],"pos":[332,262],"show":"invert","scrollbar":1,"value":"?:"}
field1:{"type":"field","size":[79,14],"pos":[175,193],"locked":1,"font":"menu","border":0,"align":"right","value":"Armor Bonus"}
attack:{"type":"contraption","size":[71,15],"pos":[6,152],"def":"DerivedStatistic","widgets":{"name":{"size":[49,14],"value":"Attack"},"val":{"size":[20,14],"pos":[50,0],"value":"11"}}}
defense:{"type":"contraption","size":[91,15],"pos":[79,152],"def":"DerivedStatistic","widgets":{"name":{"size":[69,14],"value":"Defense"},"val":{"size":[20,14],"pos":[70,0],"value":"12"}}}
movement:{"type":"contraption","size":[90,15],"pos":[80,172],"def":"DerivedStatistic","widgets":{"name":{"size":[68,14],"value":"Movement"},"val":{"size":[20,14],"pos":[69,0],"value":"12"}}}
stealth:{"type":"contraption","size":[68,15],"pos":[9,172],"def":"DerivedStatistic","widgets":{"name":{"size":[46,14],"value":"Stealth"},"val":{"size":[20,14],"pos":[47,0],"value":"5"}}}
save:{"type":"contraption","size":[56,15],"pos":[59,190],"script":"Home.14","def":"DerivedStatistic","widgets":{"name":{"size":[34,14],"value":"Save"},"val":{"size":[20,14],"pos":[35,0],"value":"6"}}}
ClearPortrait:{"type":"button","size":[36,20],"pos":[6,101],"script":"Home.15","text":"clear"}
armor_bonus:{"type":"slider","size":[71,14],"pos":[257,193],"script":"Home.16","font":"menu","interval":[0,6],"value":2,"step":2,"style":"compact"}
encumbrance:{"type":"contraption","size":[104,15],"pos":[172,176],"def":"DerivedStatistic","widgets":{"name":{"size":[82,14],"value":"Encumbrance"},"val":{"size":[20,14],"pos":[83,0]}}}
statroller1:{"type":"contraption","size":[153,114],"pos":[175,226],"def":"statroller","widgets":{"label":{},"button1":{},"button2":{},"button3":{},"button4":{},"button5":{},"button6":{},"roll":{"size":[101,114],"pos":[51,0],"value":"12 (1d20)\n9 >19 (Cha)\n5 >9 (Save)\n12 <=9 (Save)\n16 <=7 (Save)\n18 <=7 (Save)\n15 <=7 (Save)\n8 <=7 (Save)\n7 >13 (Cha)\n10 <=10 (Wis)\n4 >15 (Int)\n!!20 <=16 (Con)\n6 >15 (Int)\n4 >10 (Int)\n3 >16 (Con)\n2 >17 (Dex)\n2 >15 (Str)\n13 (1d20)\n18 (1d20)\n5 (1d20)\n16 <=10 (Str)\n13 <=10 (Str)\n19 <=10 (Dex)\n!!20 <=10 (Dex)\n5 >10 (Con)\n10 <=10 (Con)\n14 <=10 (Int)\n8 >10 (Wis)\n5 >10 (Wis)\n10 <=10 (Cha)\n8 >10 (Save)\n5 >10 (Save)\n!1 >10 (Save)\n4 >10 (Save)\n15 <=10 (Cha)\n3 >10 (Wis)\n14 <=10 (Con)\n15 <=10 (Dex)\n13 <=10 (Dex)\n4 >10 (Str)\n11 <=10 (Str)\n5 >10 (Str)\n3 >10 (Str)\n7 (1d20)\n19 (1d20)\n4 (1d20)\n13 (1d20)\n!1 >10 (Str)\n2 >10 (Dex)\n!!20 <=10 (Con)\n11 <=10 (Int)\n!!20 <=10 (Wis)\n9 >10 (Cha)\n2 >10 (Save)\n12 <=10 (Save)\n!1 >10 (Save)\n7 >10 (Cha)\n18 <=10 (Wis)\n11 <=10 (Int)\n15 <=10 (Con)\n16 <=10 (Dex)\n17 <=10 (Str)\n4 (1d20)\n3 (1d20)\n7 (1d20)\n20 (1d20)\n16 (1d20)\n5\n20\n20\n20\n20\n20"},"grid1":{"value":{"score":[10,10,10,10,10,10,6,10,10]},"row":1},"d20":{},"button7":{}}}
field6:{"type":"field","size":[79,14],"pos":[175,209],"locked":1,"font":"menu","border":0,"align":"right","value":"Armor"}
armor:{"type":"field","size":[71,14],"pos":[257,208],"locked":1,"script":"Home.9","font":"menu","border":0,"style":"code","align":"center","value":"Leather"}
grid1:{"type":"grid","size":[128,66],"pos":[45,57],"scrollbar":0,"lines":0,"bycell":1,"widths":[39],"format":"Liii","value":{"-":["1Loot","2Cash","3XP"],"GP":[0,0,0],"SP":[0,0,0],"CP":[0,0,0]},"row":0,"col":3}
slots:{"type":"contraption","size":[54,15],"pos":[275,176],"def":"DerivedStatistic","widgets":{"name":{"size":[32,14],"value":"Slots"},"val":{"size":[20,14],"pos":[33,0],"value":"2"}}}

{script:Home.0}
on view do
 update_derived_stats[]
 update_max_hp[]
end

on update_max_hp do
 s:Statistic3.score
 if s>0
  l:level.value
  if l<2
   r:(s-4)
  elseif l=2
   r:(s-2)
  elseif l=3
   r:s
  elseif l=4
   r:(s+2)
  elseif l=5
   r:(s+4)
  else
   r:(s+l)
  end
  r:(r & 20)
  r:(r | 1)
  print["level: %i, score: %i, r: %r" format (l, s, r)]
  MaxHP.text:r 
  MaxHP.event["change" r] 
 end
end

on update_derived_stats do
 armor_penalty:0
 if armor_bonus.value=2
  armor_penalty:0
 elseif armor_bonus.value=4
  armor_penalty:-2
 elseif armor_bonus.value=6
  armor_penalty:-4
 end
 inventory_slots:(sum (extract number from inventory.value))
 slots.update_stat[level.value 0 Statistic1.score inventory_slots Statistic2.mod Statistic6.mod armor_bonus.value armor_penalty]
 encumbrance.update_stat[level.value 0 Statistic1.score inventory_slots Statistic2.mod Statistic6.mod armor_bonus.value armor_penalty]
 attack.update_stat[level.value encumbrance.value Statistic1.score inventory_slots Statistic2.mod Statistic6.mod armor_bonus.value armor_penalty]
 defense.update_stat[level.value encumbrance.value Statistic1.score inventory_slots Statistic2.mod Statistic6.mod armor_bonus.value armor_penalty]
 movement.update_stat[level.value encumbrance.value Statistic1.score inventory_slots Statistic2.mod Statistic6.mod armor_bonus.value armor_penalty]
 stealth.update_stat[level.value encumbrance.value Statistic1.score inventory_slots Statistic2.mod Statistic6.mod armor_bonus.value armor_penalty]
 save.update_stat[level.value encumbrance.value Statistic1.score inventory_slots Statistic2.mod Statistic6.mod armor_bonus.value armor_penalty]
end
{end}

{script:Home.1}
on change a s do
 statroller1.setstat[0 a s]
 card.event["update_derived_stats"]
end
{end}

{script:Home.2}
on change a s do
 statroller1.setstat[1 a s]
 card.event["update_derived_stats"]
end
{end}

{script:Home.3}
on change a s do
 statroller1.setstat[2 a s]
 card.event["update_max_hp"]
end
{end}

{script:Home.4}
on change a s do
 statroller1.setstat[3 a s]
end
{end}

{script:Home.5}
on change a s do
 statroller1.setstat[4 a s]
end
{end}

{script:Home.6}
on change a s do
 statroller1.setstat[5 a s]
 card.event["update_derived_stats"]
end
{end}

{script:Home.7}
on change val do
 if val>4
  template5.show:"solid"
 elseif val>3
  template5.show:"invert"
  template4.show:"solid"
 elseif val>2
  template4.show:"invert"
  template3.show:"solid"
 elseif val>1
  template3.show:"invert"
  template2.show:"solid"
 elseif val>0
  template2.show:"invert"
  template1.show:"solid"
 else
  template1.show:"invert"
 end
 card.event["update_derived_stats"]
 card.event["update_max_hp"]
end
{end}

{script:Home.8}
on change val do
 HP.format:"" fuse ("%f/",val)
 HP.interval:(0,val)
end
{end}

{script:Home.9}
on change val do
 
end
{end}

{script:Home.10}
on click do
  go["Spells" "SlideLeft"]
end
{end}

{script:Home.11}
on click row do
 card.event["update_derived_stats"]
end
{end}

{script:Home.12}
on click do
  go["Deltas" "SlideUp"]
end
{end}

{script:Home.13}
on click do
  go["Notes" "SlideDown"]
end
{end}

{script:Home.14}
on change val do
print[val]
 statroller1.setstat[6 "Save" save.value]
end
{end}

{script:Home.15}
on click do
 Portrait.clear[]
end
{end}

{script:Home.16}
on change val do
 card.event["update_derived_stats"]
 armor.text:if val=0
 ""
 elseif val=2
 "Leather"
 elseif val=4
 "Chain"
 elseif val=6
 "Plate"
 end
end
{end}

{card:Spells}
{widgets}
button1:{"type":"button","size":[39,20],"pos":[1,18],"script":"Spells.0","text":"Home"}
Spell1:{"type":"contraption","size":[169,72],"pos":[1,41],"def":"Spell","widgets":{"Description":{"size":[169,52],"value":"Spell effect"},"name":{"size":[96,20],"value":"Spell name"},"customfield1":{"pos":[97,0],"value":"Field 1"},"customfield2":{"size":[36,20],"pos":[133,0],"value":"Field 2"}}}
Spell2:{"type":"contraption","size":[169,72],"pos":[1,116],"def":"Spell","widgets":{"Description":{"size":[169,52]},"name":{"size":[96,20]},"customfield1":{"pos":[97,0]},"customfield2":{"size":[36,20],"pos":[133,0]}}}
Spell3:{"type":"contraption","size":[169,72],"pos":[1,191],"def":"Spell","widgets":{"Description":{"size":[169,52]},"name":{"size":[96,20]},"customfield1":{"pos":[97,0]},"customfield2":{"size":[36,20],"pos":[133,0]}}}
SpellRoller1:{"type":"contraption","size":[280,96],"pos":[230,17],"def":"SpellRoller","widgets":{"dice":{"value":{"value":[1,2,5]}},"NumDice":{"value":3},"label1":{},"label2":{},"Roll":{},"doubles":{},"Sum":{"value":"Sum:8"}}}
Spell4:{"type":"contraption","size":[169,72],"pos":[1,266],"def":"Spell","widgets":{"Description":{"size":[169,52]},"name":{"size":[96,20]},"customfield1":{"pos":[97,0]},"customfield2":{"size":[36,20],"pos":[133,0]}}}
Spell5:{"type":"contraption","size":[169,72],"pos":[171,41],"def":"Spell","widgets":{"Description":{"size":[169,52]},"name":{"size":[96,20]},"customfield1":{"pos":[97,0]},"customfield2":{"size":[36,20],"pos":[133,0]}}}
Spell6:{"type":"contraption","size":[169,72],"pos":[171,116],"def":"Spell","widgets":{"Description":{"size":[169,52]},"name":{"size":[96,20]},"customfield1":{"pos":[97,0]},"customfield2":{"size":[36,20],"pos":[133,0]}}}
Spell7:{"type":"contraption","size":[169,72],"pos":[171,191],"def":"Spell","widgets":{"Description":{"size":[169,52]},"name":{"size":[96,20]},"customfield1":{"pos":[97,0]},"customfield2":{"size":[36,20],"pos":[133,0]}}}
Spell8:{"type":"contraption","size":[169,72],"pos":[171,266],"def":"Spell","widgets":{"Description":{"size":[169,52]},"name":{"size":[96,20]},"customfield1":{"pos":[97,0]},"customfield2":{"size":[36,20],"pos":[133,0]}}}
Spell10:{"type":"contraption","size":[169,72],"pos":[341,116],"def":"Spell","widgets":{"Description":{"size":[169,52]},"name":{"size":[96,20]},"customfield1":{"pos":[97,0]},"customfield2":{"size":[36,20],"pos":[133,0]}}}
Spell11:{"type":"contraption","size":[169,72],"pos":[341,191],"def":"Spell","widgets":{"Description":{"size":[169,52]},"name":{"size":[96,20]},"customfield1":{"pos":[97,0]},"customfield2":{"size":[36,20],"pos":[133,0]}}}
Spell12:{"type":"contraption","size":[169,72],"pos":[341,266],"def":"Spell","widgets":{"Description":{"size":[169,52]},"name":{"size":[96,20]},"customfield1":{"pos":[97,0]},"customfield2":{"size":[36,20],"pos":[133,0]}}}
Spell9:{"type":"contraption","size":[132,72],"pos":[341,41],"def":"Spell","widgets":{"Description":{"size":[132,52]},"name":{"size":[75,20]},"customfield1":{"size":[27,20],"pos":[76,0]},"customfield2":{"size":[28,20],"pos":[104,0]}}}

{script:Spells.0}
on click do
  go["Home" "SlideRight"]
end
{end}

{card:Deltas}
{widgets}
button1:{"type":"button","size":[39,20],"pos":[1,18],"script":"Deltas.0","text":"Home"}
Delta1:{"type":"contraption","size":[165,70],"pos":[1,41],"def":"Delta","widgets":{"field1":{"size":[150,70],"value":"Deltas light up with checkbox"},"checkbox":{"size":[13,10],"value":1}}}
Delta2:{"type":"contraption","size":[165,70],"pos":[1,117],"def":"Delta","widgets":{"field1":{"size":[150,70],"value":"Condition:\nEffect"},"checkbox":{"size":[13,10]}}}
Delta5:{"type":"contraption","size":[165,70],"pos":[174,41],"def":"Delta","widgets":{"field1":{"size":[150,70]},"checkbox":{"size":[13,10]}}}
Delta6:{"type":"contraption","size":[165,70],"pos":[174,117],"def":"Delta","widgets":{"field1":{"size":[150,70]},"checkbox":{"size":[13,10]}}}
Delta9:{"type":"contraption","size":[165,70],"pos":[346,41],"def":"Delta","widgets":{"field1":{"size":[150,70]},"checkbox":{"size":[13,10]}}}
Delta10:{"type":"contraption","size":[165,70],"pos":[346,117],"def":"Delta","widgets":{"field1":{"size":[150,70]},"checkbox":{"size":[13,10]}}}
Delta7:{"type":"contraption","size":[165,70],"pos":[174,193],"def":"Delta","widgets":{"field1":{"size":[150,70]},"checkbox":{"size":[13,10]}}}
Delta8:{"type":"contraption","size":[165,70],"pos":[174,269],"def":"Delta","widgets":{"field1":{"size":[150,70]},"checkbox":{"size":[13,10]}}}
Delta11:{"type":"contraption","size":[165,70],"pos":[346,193],"def":"Delta","widgets":{"field1":{"size":[150,70]},"checkbox":{"size":[13,10]}}}
Delta12:{"type":"contraption","size":[165,70],"pos":[346,269],"def":"Delta","widgets":{"field1":{"size":[150,70]},"checkbox":{"size":[13,10]}}}
Delta3:{"type":"contraption","size":[165,70],"pos":[1,193],"def":"Delta","widgets":{"field1":{"size":[150,70]},"checkbox":{"size":[13,10]}}}
Delta4:{"type":"contraption","size":[165,70],"pos":[1,269],"def":"Delta","widgets":{"field1":{"size":[150,70]},"checkbox":{"size":[13,10]}}}

{script:Deltas.0}
on click do
  go["Home" "SlideDown"]
end
{end}

{card:Notes}
{widgets}
HomeButton:{"type":"button","size":[39,20],"pos":[1,18],"script":"Notes.0","text":"Home"}
field1:{"type":"field","size":[130,301],"pos":[1,40],"scrollbar":1}
field2:{"type":"field","size":[130,301],"pos":[132,40],"scrollbar":1}
field3:{"type":"field","size":[130,301],"pos":[263,40],"scrollbar":1}
grid1:{"type":"grid","size":[117,301],"pos":[394,40],"headers":0,"value":{"notes":["Double-click cell","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""]},"row":0}
button1:{"type":"button","size":[45,20],"pos":[466,18],"script":"Notes.1","text":"More..."}

{script:Notes.0}
on click do
  go["Home" "SlideUp"]
end
{end}

{script:Notes.1}
on click do
  go["Notes2" "WipeDown"]
end
{end}

{card:Notes2}
{widgets}
HomeButton:{"type":"button","size":[39,20],"pos":[1,18],"script":"Notes.0","text":"Home"}
field1:{"type":"field","size":[130,301],"pos":[1,40],"scrollbar":1}
field2:{"type":"field","size":[130,301],"pos":[132,40],"scrollbar":1}
field3:{"type":"field","size":[130,301],"pos":[263,40],"scrollbar":1}
grid1:{"type":"grid","size":[117,301],"pos":[394,40],"headers":0,"value":{"notes":["Double-click cell","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""]},"row":1}
button1:{"type":"button","size":[45,20],"pos":[466,18],"script":"Notes2.0","text":"Back..."}

{script:Notes2.0}
on click do
  go["Notes" "WipeUp"]
end
{end}

{contraption:Statistic}
size:[165,20]
margin:[71,2,24,4]
description:"Editable RPG stat with name, value, modifier, and 3d6 roller."
script:"Statistic.0"
template:"on change a s do\n \nend"
attributes:{"name":["abbr","score"],"label":["",""],"type":["string","number"]}
{widgets}
name:{"type":"field","size":[28,20],"pos":[35,0],"locked":1,"script":"Statistic.1","font":"menu","style":"plain","align":"center","value":"Str"}
score:{"type":"slider","size":[80,20],"pos":[64,0],"script":"Statistic.2","font":"menu","interval":[0,24],"value":10,"style":"bar"}
modifier:{"type":"field","size":[20,20],"pos":[145,0],"locked":1,"script":"Home.9","font":"menu","align":"center","value":"0"}
roll:{"type":"button","size":[34,20],"pos":[0,0],"script":"Statistic.3","text":"3d6","value":0}

{script:Statistic.0}
on get_abbr do
 name.text
end

on set_abbr x do
 name.text:x
 card.event["change" me.abbr me.score]
end

on get_score do
 score.value
end

on set_score x do
 score.value:x
 roll.show:"solid"
 m:deck.event["stat_to_mod" x]
 if x>11
  modifier.value:"" fuse ("+",m)
 else
  modifier.value:m
 end
 card.event["change" me.abbr me.score]
end

on get_mod do
 deck.event["stat_to_mod" score.value]
end
{end}

{script:Statistic.1}
on change val do
 card.event["change" val get_score[]]
end
{end}

{script:Statistic.2}
on change val do
 set_score[val]
 card.event["change" get_abbr[] val]
end
{end}

{script:Statistic.3}
on click do
 set_score[random[6]+random[6]+random[6]+3]
 me.show:"none"
 card.event["change" get_abbr[] get_score[]]
end
{end}

{contraption:SpellRoller}
size:[280,96]
margin:[0,0,0,0]
description:"Rolls a great pile of d6s, and calls out doubles and triples."
attributes:{"name":[],"label":[],"type":[]}
{widgets}
dice:{"type":"grid","size":[36,95],"pos":[244,1],"headers":0,"lines":0,"value":{"value":[2,1,3,1,2,5]}}
NumDice:{"type":"slider","size":[41,16],"pos":[23,4],"interval":[0,13],"value":6,"style":"compact"}
label1:{"type":"field","size":[22,16],"pos":[1,4],"locked":1,"border":0,"value":"Roll"}
label2:{"type":"field","size":[27,16],"pos":[65,4],"locked":1,"border":0,"value":"dice:"}
Roll:{"type":"button","size":[30,16],"pos":[89,4],"script":"SpellRoller.0","text":"Roll!"}
doubles:{"type":"field","size":[87,16],"pos":[119,1],"locked":1,"border":0,"align":"right","value":"Doubles!!"}
Sum:{"type":"field","size":[40,16],"pos":[205,1],"locked":1,"value":"Sum:14"}

{script:SpellRoller.0}
on click do
 #Go ahead and clear the selection
 dice.row:-1
 
 #Roll the dice into the grid
 a:()
 each x in range NumDice.value
  a[x]:random[6]+1
 end
 dice.value:a
 
 #Update the sum display
 Sum.value:"" fuse "Sum:", sum a
 
 #Count each result
 b:()
 each x in a
  b[x]:1+b[x]
 end
 
 #This works but IDK if it's the ideal way to do this. Basically gets how many times the most frequent number occurs
 c: first extract value orderby value desc from b
 
 #Basically a big switch statement
 if c<2
  doubles.value:""
 elseif c=2
  doubles.value:"Doubles!!"
 elseif c=3
  doubles.value:"Triples!!!"
 elseif c=4
  doubles.value:"Quadruples????"
 elseif c=5
  doubles.value:"Quintuples?!?!?"
 elseif c=6
  doubles.value:"SEXTUPLES!?!?!?"
 else
  doubles.value:"I give up"
 end
end
{end}

{contraption:Spell}
size:[166,72]
resizable:1
margin:[0,21,0,0]
description:"Spell card with name field, description, and 2 small custom fields (range/duration?)"
attributes:{"name":[],"label":[],"type":[]}
{widgets}
Description:{"type":"field","size":[166,52],"pos":[0,20],"scrollbar":1}
name:{"type":"field","size":[94,20],"pos":[0,0],"style":"plain"}
customfield1:{"type":"field","size":[35,20],"pos":[95,0],"style":"plain"}
customfield2:{"type":"field","size":[35,20],"pos":[131,0],"style":"plain"}

{contraption:Delta}
size:[150,81]
resizable:1
margin:[16,24,0,0]
description:"Text field with the delta symbol, just because I don't want to have to import the image over and over.\nAlso has a checkbox to toggle the text field on/off."
image:"%%IMG2AJYAUQD/AMcBAQCUAQEAAQEBAJMBAQABAQEAAwEBAI4BAQADAQEAkQEBAAMBAQCQAQEABQEBAI8BBwABAQEA/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8AUA=="
script:"Delta.0"
{widgets}
field1:{"type":"field","size":[135,81],"pos":[15,0],"show":"invert","scrollbar":1}
checkbox:{"type":"button","size":[13,13],"pos":[0,11],"script":"Delta.1","style":"check","value":0}

{script:Delta.0}
on view do
 if checkbox.value
  field1.show:"solid"
 else
  field1.show:"invert"
 end
end
{end}

{script:Delta.1}
on click do
 if me.value
  field1.show:"solid"
 else
  field1.show:"invert"
 end
end
{end}

{contraption:statroller}
size:[151,114]
resizable:1
margin:[47,17,0,74]
description:"Has a list of stat scores from 1-20, and can roll each of them.\nUse the \"setstat\" function.\nThe first argument is which stat you're setting, top-to-bottom, zero-indexed.\nThe second is a string, ideally a short abbreviation.\nThe third is the stat score. Modifiers are automatically calculated."
script:"statroller.0"
attributes:{"name":[],"label":[],"type":[]}
{widgets}
label:{"type":"field","size":[46,16],"pos":[0,0],"locked":1,"font":"menu","show":"invert","value":"Rolls"}
button1:{"type":"button","size":[46,12],"pos":[0,30],"script":"statroller.1","font":"body","text":"Str"}
button2:{"type":"button","size":[46,12],"pos":[0,42],"script":"statroller.2","font":"body","text":"Dex"}
button3:{"type":"button","size":[46,12],"pos":[0,54],"script":"statroller.3","font":"body","text":"Con"}
button4:{"type":"button","size":[46,12],"pos":[0,66],"script":"statroller.4","font":"body","text":"Int"}
button5:{"type":"button","size":[46,12],"pos":[0,78],"script":"statroller.5","font":"body","text":"Wis"}
button6:{"type":"button","size":[46,12],"pos":[0,90],"script":"statroller.6","font":"body","text":"Cha"}
roll:{"type":"field","size":[100,114],"pos":[50,0],"script":"Home.9","scrollbar":1,"style":"plain","align":"center","value":"5\n20\n20\n20\n20\n20"}
grid1:{"type":"grid","size":[65,106],"pos":[-110,-4],"locked":1,"show":"none","bycell":1,"format":"i","value":{"score":[10,10,10,10,10,10,10,10,10]},"row":0,"col":0}
d20:{"type":"button","size":[46,12],"pos":[0,18],"script":"statroller.7","font":"body","text":"1d20"}
button7:{"type":"button","size":[46,12],"pos":[0,102],"script":"statroller.8","font":"body","text":"Save"}

{script:statroller.0}
on do_roll n do
 a:random[n]+1
 r:"%i (1d%i)" format (a, n)
 roll.text:"\n" fuse r, roll.text
end

on do_stat_roll n abbr do
 grid1.cell:(0,n)
 a:random[20]+1
 stat:grid1.cellvalue
 special:""
 if a=1
  special:"!"
 elseif a=20
  special:"!!"
 end
 r:if stat>a "%s%i >%i (%s)" format (special, a, stat, abbr) else "%s%i <=%i (%s)" format (special, a, stat, abbr) end
 roll.text:"\n" fuse r, roll.text
end

on setstat num abbr score do
 grid1.cell:(0,num)
 grid1.cellvalue:score
 if num=0
  button1.text:abbr
 elseif num=1
  button2.text:abbr
 elseif num=2
  button3.text:abbr
 elseif num=3
  button4.text:abbr
 elseif num=4
  button5.text:abbr
 elseif num=5
  button6.text:abbr
 elseif num=6
  button7.text:abbr
 end
end

on get_setstat do
 setstat
end
{end}

{script:statroller.1}
on click do
 do_stat_roll[0 me.text]
end
{end}

{script:statroller.2}
on click do
 do_stat_roll[1 me.text]
end
{end}

{script:statroller.3}
on click do
 do_stat_roll[2 me.text]
end
{end}

{script:statroller.4}
on click do
 do_stat_roll[3 me.text]
end
{end}

{script:statroller.5}
on click do
 do_stat_roll[4 me.text]
end
{end}

{script:statroller.6}
on click do
 do_stat_roll[5 me.text]
end
{end}

{script:statroller.7}
on click do
 do_roll[20]
end
{end}

{script:statroller.8}
on click do
 do_stat_roll[6 me.text]
end
{end}

{contraption:enum}
size:[100,25]
resizable:1
margin:[5,5,5,5]
description:"select from among enumerated string values."
script:"enum.0"
template:"on change val do\n \nend"
attributes:{"name":["options"],"label":["Options"],"type":["code"]}
{widgets}
s:{"type":"slider","size":[100,25],"pos":[0,0],"script":"Home.9","interval":[0,100],"style":"compact"}
o:{"type":"field","size":[100,20],"pos":[0,-30],"locked":1,"script":"Home.9","style":"plain"}

{script:enum.0}
on get_options   do o.text end
on get_value     do ("\n" split o.text)[s.value] end
on set_options x do o.text:x s.value:0 view[] end

on set_value x do
 v:"\n" split o.text
 d:v dict range count v
 s.interval:0,(count v)-1
 s.value:v[0] unless d[x]
 s.format:v[s.value]
 s.font:card.font
 s.show:card.show
 s.locked:card.locked
end

on change do
 view[]
 card.event["change" get_value[]]
end

on view do
 v:"\n" split o.text
 s.interval:0,(count v)-1
 s.format:v[s.value]
 s.font:card.font
 s.show:card.show
 s.locked:card.locked
end

{end}

{contraption:DerivedStatistic}
size:[50,21]
resizable:1
margin:[3,2,26,5]
image:"%%IMG2ADIAFQH/Af8B/wH/AR4="
script:"DerivedStatistic.0"
attributes:{"name":["abbr"],"label":[""],"type":["string"]}
{widgets}
name:{"type":"field","size":[28,20],"pos":[0,0],"locked":1,"script":"DerivedStatistic.1","font":"menu","border":0,"align":"right","value":"Str"}
val:{"type":"field","size":[20,20],"pos":[29,0],"locked":1,"script":"Home.9","font":"menu","align":"center","value":"0"}

{script:DerivedStatistic.0}
on get_value do
 val.text+0
end

on set_value x do
 val.text:x
end

on get_abbr do
 name.text
end

on set_abbr x do
 name.text:x
end

on update_stat_if_needed x do
  if val.text=x
  else
   set_value[x]
   card.event["change" x]
  end
end

on update_stat level enc str inventory_slots dex_bonus cha_bonus armor_bonus armor_penalty do
 print["updating %s: %i %i %i %i %i %i %i" format (name.text, level, str, inventory_slots, dex_bonus, cha_bonus, armor_bonus, armor_penalty)]
 if name.text="Attack"
  print["actually updating %s" format name.text]
  # attack: Starts at 11. Increases with level
  level_mod:((floor (level / 2)) & 4)
  update_stat_if_needed[(11 + level_mod)]
 elseif name.text="Defense"
   print["actually updating %s" format name.text]
  # defense: 10 + Dex. Bonus OR bonus from armour
  update_stat_if_needed[(10 + (dex_bonus | armor_bonus) - enc)]
 elseif name.text="Movement"
   print["actually updating %s" format name.text]
  # movement: 12 + Dex. Bonus - Armour penalty
  update_stat_if_needed[(12 + dex_bonus + armor_penalty - enc)]
 elseif name.text="Stealth"
   print["actually updating %s" format name.text]
  # stealth: 5 + Dex. Bonus - Armour penalty
  update_stat_if_needed[(5 + dex_bonus + armor_penalty - enc)]
 elseif name.text="Save"
   print["actually updating %s" format name.text]
  # save: 5 + Cha. Bonus. Increases with level.
  if level=0
   base_save:5
  elseif level=1
   base_save:6
  elseif level<5
   base_save:7
  elseif level<8
   base_save:8
  elseif level<10
   base_save:9
  else
   base_save:10
  end
  update_stat_if_needed[(base_save + cha_bonus)]
 elseif name.text="Slots"
  print["actually updating %s" format name.text]
  update_stat_if_needed[inventory_slots]
 elseif name.text="Encumbrance"
  print["actually updating %s" format name.text]
  v:if str<inventory_slots inventory_slots - str else 0 end
  v:if v<0 -v else v end
  update_stat_if_needed[v] 
 else
  sys.panic["Unknown derived statistic"]
 end
end

on get_update_stat do
 update_stat
end
{end}

{script:DerivedStatistic.1}
on change val do
end
{end}

